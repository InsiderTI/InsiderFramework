document.addEventListener("DOMContentLoaded", function(event) { laststatehistory=null;});window.onpopstate = function(event){ if (JSON.stringify(event.state) !== laststatehistory){ laststatehistory=JSON.stringify(event.state); location.reload(); }};function ReplaceAll(find, replace, str){ return str.split(find).join(replace);};function IsJSON(val){ try { JSON.parse(val); } catch (e) { return false; } return true;};function ParseJSONView(resultview){ if (IsJSON(resultview)){ resultjson=JSON.parse(resultview); resultjson['css']=ReplaceAll('\\n\\', '', resultjson['css']); resultjson['script']=ReplaceAll('\\n\\', '', resultjson['script']); return resultjson; } else{ return false; }};function Sleep(milliseconds){ var start = new Date().getTime(); for (var i = 0; i < 1e7; i++) { if ((new Date().getTime() - start) > milliseconds){ break; } }};function DeleteCookie(cookiename){ document.cookie = cookiename + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';};var UpdateDataCookieJS = function(name, value, days) { var expires; if (days) { var date = new Date(); date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000)); expires = "; expires=" + date.toGMTString(); } else { expires = ""; } document.cookie = name + "=" + value + expires + "; path=/";};function GetDataCookieJS(c_name) { if (document.cookie.length > 0) { c_start = document.cookie.indexOf(c_name + "="); if (c_start != -1) { c_start = c_start + c_name.length + 1; c_end = document.cookie.indexOf(";", c_start); if (c_end == -1) { c_end = document.cookie.length; } return unescape(document.cookie.substring(c_start, c_end)); } } return "";};function ConvertDataToPost(data, json){ if (json === true){ newdatatmp=JSON.stringify(data); } else{ newdatatmp=data; } newdata=ReplaceAll('/','\\/', newdatatmp); return newdata;};function getGetParams(){ urlgets=window.location.search.replace("?", "").split("&"); params = {}; for (var i = 0, len = urlgets.length; i < len; i++) { if (urlgets[i] !== ""){ keyvalue=urlgets[i].split("="); truekey=keyvalue[0]; truevalue=keyvalue[1]; params[truekey]=truevalue; } } return params;};function ConvertTimeStamp(timestamp){ timestamp_tmp=timestamp.split('-'); ano=timestamp_tmp[0]; mes=timestamp_tmp[1]; diahora=timestamp_tmp[2]; dia_tmp=diahora.split(' '); dia=dia_tmp[0]; hora=dia_tmp[1]; return (dia+"/"+mes+"/"+ano+" "+hora);};function comparaDatas(dataInicial, dataFinal, format="YYYY-MM-DD") { data_1=moment(dataInicial, format); data_2=moment(dataFinal, format); if (data_1 == 'Invalid Date'){ throw new Error("Invalid Date Format"); } if (data_1 === data_2){ return true; } if (data_1 < data_2){ return true; } else { return false; }}var tagsToReplace = { '&': '&amp;', '<': '&lt;', '>': '&gt;'};function replaceTag(tag){ return tagsToReplace[tag] || tag;};function SafeTagsReplace(str) { return str.replace(/[&<>]/g, replaceTag);};var decodeEntities = (function () { var doc = document.implementation.createHTMLDocument(""); var element = doc.createElement('div'); function getText(str) { element.innerHTML = str; str = element.textContent; element.textContent = ''; return str; }; function decodeHTMLEntities(str) { if (str && typeof str === 'string') { var x = getText(str); while (str !== x) { str = x; x = getText(x); } return x; } }; return decodeHTMLEntities;})();